@model MoviesStore.Web.Models.ProducerViewModel

@{ 
    Layout = null;
}

<div >
    @*@using (Html.BeginForm())
    {*@
@using (Ajax.BeginForm("AddProducer", "Producer",
                                                                                new AjaxOptions
                                                                                {
                                                                                    OnSuccess = "OnSuccess",
                                                                                    OnFailure = "OnFailure",
                                                                                    UpdateTargetId = "container",
                                                                                    LoadingElementId = "progress"
                                                                                }, new { enctype = "multipart/form-data" }))
{
        @Html.AntiForgeryToken()

        <div class="form-horizontal" id="container">
            <h4>ProducerViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Sex, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control datepicker" } })
                    @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Bio, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Bio, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextArea("Bio", new { rows = 5, columns = 40, @style = "width:100%"  })
                    @Html.ValidationMessageFor(model => model.Bio, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

}
<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="~/Scripts/bootstrap.min.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(function () {
        $('.datepicker').datepicker(); //Initialise any date pickers


    });

    function OnSuccess(response) {
        document.body.innerHTML = response;


        alert("Producer Added Successfully");
    }
    function OnFailure(response) {
        alert("Error occured.");
    }
</script>